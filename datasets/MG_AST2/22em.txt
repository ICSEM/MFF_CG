AST
3971[CompilationUnit
3972[NodeList
3973[ClassOrInterfaceDeclaration
3974[DefilerOfSouls
3975[NodeList
3976[ConstructorDeclaration
3977[DefilerOfSouls
3978[NodeList
3979[Parameter
3980[VariableDeclaratorId
3981[ClassOrInterfaceType
3982[BlockStmt
3983[NodeList
3984[ExpressionStmt
3985[AssignExpr
3986[FieldAccessExpr
3987[this
3988[expansionSetCode
3989["ARB"
3990[ExpressionStmt
3991[MethodCallExpr
3992[FieldAccessExpr
3993[this
3994[subtype
3995[add
3996[NodeList
3997["Demon"
3998[ExpressionStmt
3999[AssignExpr
4000[FieldAccessExpr
4001[this
4002[power
4003[ObjectCreationExpr
4004[ClassOrInterfaceType
4005[NodeList
4006[5
4007[ExpressionStmt
4008[AssignExpr
4009[FieldAccessExpr
4010[this
4011[toughness
4012[ObjectCreationExpr
4013[ClassOrInterfaceType
4014[NodeList
4015[5
4016[ExpressionStmt
4017[MethodCallExpr
4018[this
4019[addAbility
4020[NodeList
4021[MethodCallExpr
4022[FlyingAbility
4023[getInstance
4024[ExpressionStmt
4025[MethodCallExpr
4026[this
4027[addAbility
4028[NodeList
4029[ObjectCreationExpr
4030[ClassOrInterfaceType
4031[NodeList
4032[FieldAccessExpr
4033[Zone
4034[BATTLEFIELD
4035[ObjectCreationExpr
4036[ClassOrInterfaceType
4037[FieldAccessExpr
4038[TargetController
4039[ANY
4040[false
4041[true
4042[ExplicitConstructorInvocationStmt
4043[NodeList
4044[ownerId
4045[37
4046["Defiler of Souls"
4047[FieldAccessExpr
4048[Rarity
4049[MYTHIC
4050[ArrayCreationExpr
4051[NodeList
4052[ArrayCreationLevel
4053[ClassOrInterfaceType
4054[ArrayInitializerExpr
4055[NodeList
4056[FieldAccessExpr
4057[CardType
4058[CREATURE
4059["{3}{B}{B}{R}"
4060[ConstructorDeclaration
4061[DefilerOfSouls
4062[NodeList
4063[Parameter
4064[VariableDeclaratorId
4065[ClassOrInterfaceType
4066[BlockStmt
4067[NodeList
4068[ExplicitConstructorInvocationStmt
4069[NodeList
4070[card
4071[@Overridepublic DefilerOfSouls copy() { return new DefilerOfSouls(this);}
4072[NodeList
4073[MarkerAnnotationExpr
4074[Override
4075[ClassOrInterfaceType
4076[copy
4077[BlockStmt
4078[NodeList
4079[ReturnStmt
4080[ObjectCreationExpr
4081[ClassOrInterfaceType
4082[NodeList
4083[this
4084[NodeList
4085[ClassOrInterfaceType
4086[ClassOrInterfaceDeclaration
4087[DefilerOfSoulsEffect
4088[NodeList
4089[ConstructorDeclaration
4090[DefilerOfSoulsEffect
4091[BlockStmt
4092[NodeList
4093[ExpressionStmt
4094[AssignExpr
4095[staticText
4096["that player sacrifices a monocolored creature"
4097[ExplicitConstructorInvocationStmt
4098[NodeList
4099[FieldAccessExpr
4100[Outcome
4101[Sacrifice
4102[ConstructorDeclaration
4103[DefilerOfSoulsEffect
4104[NodeList
4105[Parameter
4106[VariableDeclaratorId
4107[ClassOrInterfaceType
4108[BlockStmt
4109[NodeList
4110[ExplicitConstructorInvocationStmt
4111[NodeList
4112[effect
4113[@Overridepublic boolean apply(Game game, Ability source) { FilterControlledCreaturePermanent filter = new FilterControlledCreaturePermanent("monocolored creature"); Player player = game.getPlayer(targetPointer.getFirst(game, source)); if (player == null) { return false; } filter.add(new MonocoloredPredicate()); int amount; int realCount = game.getBattlefield().countAll(filter, player.getId(), game); amount = Math.min(1, realCount); Target target = new TargetControlledPermanent(amount, amount, filter, false); target.setNotTarget(true); if (amount > 0 && target.canChoose(source.getSourceId(), player.getId(), game)) { boolean abilityApplied = false; while (player.canRespond() && !target.isChosen() && target.canChoose(player.getId(), game)) { player.choose(Outcome.Sacrifice, target, source.getSourceId(), game); } for (int idx = 0; idx < target.getTargets().size(); idx++) { Permanent permanent = game.getPermanent((UUID) target.getTargets().get(idx)); if (permanent != null) { abilityApplied |= permanent.sacrifice(source.getSourceId(), game); } } return abilityApplied; } return false;}
4114[NodeList
4115[MarkerAnnotationExpr
4116[Override
4117[PrimitiveType
4118[apply
4119[NodeList
4120[Parameter
4121[VariableDeclaratorId
4122[ClassOrInterfaceType
4123[Parameter
4124[VariableDeclaratorId
4125[ClassOrInterfaceType
4126[BlockStmt
4127[NodeList
4128[ExpressionStmt
4129[VariableDeclarationExpr
4130[ClassOrInterfaceType
4131[NodeList
4132[VariableDeclarator
4133[VariableDeclaratorId
4134[ObjectCreationExpr
4135[ClassOrInterfaceType
4136[NodeList
4137["monocolored creature"
4138[ExpressionStmt
4139[VariableDeclarationExpr
4140[ClassOrInterfaceType
4141[NodeList
4142[VariableDeclarator
4143[VariableDeclaratorId
4144[MethodCallExpr
4145[game
4146[getPlayer
4147[NodeList
4148[MethodCallExpr
4149[targetPointer
4150[getFirst
4151[NodeList
4152[game
4153[source
4154[IfStmt
4155[BinaryExpr
4156[player
4157[null
4158[BlockStmt
4159[NodeList
4160[ReturnStmt
4161[false
4162[ExpressionStmt
4163[MethodCallExpr
4164[filter
4165[add
4166[NodeList
4167[ObjectCreationExpr
4168[ClassOrInterfaceType
4169[ExpressionStmt
4170[VariableDeclarationExpr
4171[PrimitiveType
4172[NodeList
4173[VariableDeclarator
4174[VariableDeclaratorId
4175[ExpressionStmt
4176[VariableDeclarationExpr
4177[PrimitiveType
4178[NodeList
4179[VariableDeclarator
4180[VariableDeclaratorId
4181[MethodCallExpr
4182[MethodCallExpr
4183[game
4184[getBattlefield
4185[countAll
4186[NodeList
4187[filter
4188[MethodCallExpr
4189[player
4190[getId
4191[game
4192[ExpressionStmt
4193[AssignExpr
4194[amount
4195[MethodCallExpr
4196[Math
4197[min
4198[NodeList
4199[1
4200[realCount
4201[ExpressionStmt
4202[VariableDeclarationExpr
4203[ClassOrInterfaceType
4204[NodeList
4205[VariableDeclarator
4206[VariableDeclaratorId
4207[ObjectCreationExpr
4208[ClassOrInterfaceType
4209[NodeList
4210[amount
4211[amount
4212[filter
4213[false
4214[ExpressionStmt
4215[MethodCallExpr
4216[target
4217[setNotTarget
4218[NodeList
4219[true
4220[IfStmt
4221[BinaryExpr
4222[BinaryExpr
4223[amount
4224[0
4225[MethodCallExpr
4226[target
4227[canChoose
4228[NodeList
4229[MethodCallExpr
4230[source
4231[getSourceId
4232[MethodCallExpr
4233[player
4234[getId
4235[game
4236[BlockStmt
4237[NodeList
4238[ExpressionStmt
4239[VariableDeclarationExpr
4240[PrimitiveType
4241[NodeList
4242[VariableDeclarator
4243[VariableDeclaratorId
4244[false
4245[WhileStmt
4246[BinaryExpr
4247[BinaryExpr
4248[MethodCallExpr
4249[player
4250[canRespond
4251[UnaryExpr
4252[MethodCallExpr
4253[target
4254[isChosen
4255[MethodCallExpr
4256[target
4257[canChoose
4258[NodeList
4259[MethodCallExpr
4260[player
4261[getId
4262[game
4263[BlockStmt
4264[NodeList
4265[ExpressionStmt
4266[MethodCallExpr
4267[player
4268[choose
4269[NodeList
4270[FieldAccessExpr
4271[Outcome
4272[Sacrifice
4273[target
4274[MethodCallExpr
4275[source
4276[getSourceId
4277[game
4278[ForStmt
4279[BinaryExpr
4280[idx
4281[MethodCallExpr
4282[MethodCallExpr
4283[target
4284[getTargets
4285[size
4286[NodeList
4287[VariableDeclarationExpr
4288[PrimitiveType
4289[NodeList
4290[VariableDeclarator
4291[VariableDeclaratorId
4292[0
4293[NodeList
4294[UnaryExpr
4295[idx
4296[BlockStmt
4297[NodeList
4298[ExpressionStmt
4299[VariableDeclarationExpr
4300[ClassOrInterfaceType
4301[NodeList
4302[VariableDeclarator
4303[VariableDeclaratorId
4304[MethodCallExpr
4305[game
4306[getPermanent
4307[NodeList
4308[CastExpr
4309[ClassOrInterfaceType
4310[MethodCallExpr
4311[MethodCallExpr
4312[target
4313[getTargets
4314[get
4315[NodeList
4316[idx
4317[IfStmt
4318[BinaryExpr
4319[permanent
4320[null
4321[BlockStmt
4322[NodeList
4323[ExpressionStmt
4324[AssignExpr
4325[abilityApplied
4326[MethodCallExpr
4327[permanent
4328[sacrifice
4329[NodeList
4330[MethodCallExpr
4331[source
4332[getSourceId
4333[game
4334[ReturnStmt
4335[abilityApplied
4336[ReturnStmt
4337[false
4338[@Overridepublic DefilerOfSoulsEffect copy() { return new DefilerOfSoulsEffect(this);}
4339[NodeList
4340[MarkerAnnotationExpr
4341[Override
4342[ClassOrInterfaceType
4343[copy
4344[BlockStmt
4345[NodeList
4346[ReturnStmt
4347[ObjectCreationExpr
4348[ClassOrInterfaceType
4349[NodeList
4350[this
4351[NodeList
4352[ClassOrInterfaceType
3971->3972
3972->3973
3973->3974
3973->3975
3975->3976
3976->3977
3976->3978
3978->3979
3979->3980
3979->3981
3976->3982
3982->3983
3983->3984
3984->3985
3985->3986
3986->3987
3986->3988
3985->3989
3983->3990
3990->3991
3991->3992
3992->3993
3992->3994
3991->3995
3991->3996
3996->3997
3983->3998
3998->3999
3999->4000
4000->4001
4000->4002
3999->4003
4003->4004
4003->4005
4005->4006
3983->4007
4007->4008
4008->4009
4009->4010
4009->4011
4008->4012
4012->4013
4012->4014
4014->4015
3983->4016
4016->4017
4017->4018
4017->4019
4017->4020
4020->4021
4021->4022
4021->4023
3983->4024
4024->4025
4025->4026
4025->4027
4025->4028
4028->4029
4029->4030
4029->4031
4031->4032
4032->4033
4032->4034
4031->4035
4035->4036
4031->4037
4037->4038
4037->4039
4031->4040
4031->4041
3983->4042
4042->4043
4043->4044
4043->4045
4043->4046
4043->4047
4047->4048
4047->4049
4043->4050
4050->4051
4051->4052
4050->4053
4050->4054
4054->4055
4055->4056
4056->4057
4056->4058
4043->4059
3975->4060
4060->4061
4060->4062
4062->4063
4063->4064
4063->4065
4060->4066
4066->4067
4067->4068
4068->4069
4069->4070
3975->4071
4071->4072
4072->4073
4073->4074
4071->4075
4071->4076
4071->4077
4077->4078
4078->4079
4079->4080
4080->4081
4080->4082
4082->4083
3973->4084
4084->4085
3972->4086
4086->4087
4086->4088
4088->4089
4089->4090
4089->4091
4091->4092
4092->4093
4093->4094
4094->4095
4094->4096
4092->4097
4097->4098
4098->4099
4099->4100
4099->4101
4088->4102
4102->4103
4102->4104
4104->4105
4105->4106
4105->4107
4102->4108
4108->4109
4109->4110
4110->4111
4111->4112
4088->4113
4113->4114
4114->4115
4115->4116
4113->4117
4113->4118
4113->4119
4119->4120
4120->4121
4120->4122
4119->4123
4123->4124
4123->4125
4113->4126
4126->4127
4127->4128
4128->4129
4129->4130
4129->4131
4131->4132
4132->4133
4132->4134
4134->4135
4134->4136
4136->4137
4127->4138
4138->4139
4139->4140
4139->4141
4141->4142
4142->4143
4142->4144
4144->4145
4144->4146
4144->4147
4147->4148
4148->4149
4148->4150
4148->4151
4151->4152
4151->4153
4127->4154
4154->4155
4155->4156
4155->4157
4154->4158
4158->4159
4159->4160
4160->4161
4127->4162
4162->4163
4163->4164
4163->4165
4163->4166
4166->4167
4167->4168
4127->4169
4169->4170
4170->4171
4170->4172
4172->4173
4173->4174
4127->4175
4175->4176
4176->4177
4176->4178
4178->4179
4179->4180
4179->4181
4181->4182
4182->4183
4182->4184
4181->4185
4181->4186
4186->4187
4186->4188
4188->4189
4188->4190
4186->4191
4127->4192
4192->4193
4193->4194
4193->4195
4195->4196
4195->4197
4195->4198
4198->4199
4198->4200
4127->4201
4201->4202
4202->4203
4202->4204
4204->4205
4205->4206
4205->4207
4207->4208
4207->4209
4209->4210
4209->4211
4209->4212
4209->4213
4127->4214
4214->4215
4215->4216
4215->4217
4215->4218
4218->4219
4127->4220
4220->4221
4221->4222
4222->4223
4222->4224
4221->4225
4225->4226
4225->4227
4225->4228
4228->4229
4229->4230
4229->4231
4228->4232
4232->4233
4232->4234
4228->4235
4220->4236
4236->4237
4237->4238
4238->4239
4239->4240
4239->4241
4241->4242
4242->4243
4242->4244
4237->4245
4245->4246
4246->4247
4247->4248
4248->4249
4248->4250
4247->4251
4251->4252
4252->4253
4252->4254
4246->4255
4255->4256
4255->4257
4255->4258
4258->4259
4259->4260
4259->4261
4258->4262
4245->4263
4263->4264
4264->4265
4265->4266
4266->4267
4266->4268
4266->4269
4269->4270
4270->4271
4270->4272
4269->4273
4269->4274
4274->4275
4274->4276
4269->4277
4237->4278
4278->4279
4279->4280
4279->4281
4281->4282
4282->4283
4282->4284
4281->4285
4278->4286
4286->4287
4287->4288
4287->4289
4289->4290
4290->4291
4290->4292
4278->4293
4293->4294
4294->4295
4278->4296
4296->4297
4297->4298
4298->4299
4299->4300
4299->4301
4301->4302
4302->4303
4302->4304
4304->4305
4304->4306
4304->4307
4307->4308
4308->4309
4308->4310
4310->4311
4311->4312
4311->4313
4310->4314
4310->4315
4315->4316
4297->4317
4317->4318
4318->4319
4318->4320
4317->4321
4321->4322
4322->4323
4323->4324
4324->4325
4324->4326
4326->4327
4326->4328
4326->4329
4329->4330
4330->4331
4330->4332
4329->4333
4237->4334
4334->4335
4127->4336
4336->4337
4088->4338
4338->4339
4339->4340
4340->4341
4338->4342
4338->4343
4338->4344
4344->4345
4345->4346
4346->4347
4347->4348
4347->4349
4349->4350
4086->4351
4351->4352
