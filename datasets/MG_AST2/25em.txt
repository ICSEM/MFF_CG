AST
4624[CompilationUnit
4625[NodeList
4626[ClassOrInterfaceDeclaration
4627[DenyReality
4628[NodeList
4629[ConstructorDeclaration
4630[DenyReality
4631[NodeList
4632[Parameter
4633[VariableDeclaratorId
4634[ClassOrInterfaceType
4635[BlockStmt
4636[NodeList
4637[ExpressionStmt
4638[AssignExpr
4639[FieldAccessExpr
4640[this
4641[expansionSetCode
4642["ARB"
4643[ExpressionStmt
4644[MethodCallExpr
4645[MethodCallExpr
4646[this
4647[getSpellAbility
4648[addTarget
4649[NodeList
4650[ObjectCreationExpr
4651[ClassOrInterfaceType
4652[ExpressionStmt
4653[MethodCallExpr
4654[MethodCallExpr
4655[this
4656[getSpellAbility
4657[addEffect
4658[NodeList
4659[ObjectCreationExpr
4660[ClassOrInterfaceType
4661[ExpressionStmt
4662[MethodCallExpr
4663[this
4664[addAbility
4665[NodeList
4666[ObjectCreationExpr
4667[ClassOrInterfaceType
4668[ExplicitConstructorInvocationStmt
4669[NodeList
4670[ownerId
4671[19
4672["Deny Reality"
4673[FieldAccessExpr
4674[Rarity
4675[COMMON
4676[ArrayCreationExpr
4677[NodeList
4678[ArrayCreationLevel
4679[ClassOrInterfaceType
4680[ArrayInitializerExpr
4681[NodeList
4682[FieldAccessExpr
4683[CardType
4684[SORCERY
4685["{3}{U}{B}"
4686[ConstructorDeclaration
4687[DenyReality
4688[NodeList
4689[Parameter
4690[VariableDeclaratorId
4691[ClassOrInterfaceType
4692[BlockStmt
4693[NodeList
4694[ExplicitConstructorInvocationStmt
4695[NodeList
4696[card
4697[@Overridepublic DenyReality copy() { return new DenyReality(this);}
4698[NodeList
4699[MarkerAnnotationExpr
4700[Override
4701[ClassOrInterfaceType
4702[copy
4703[BlockStmt
4704[NodeList
4705[ReturnStmt
4706[ObjectCreationExpr
4707[ClassOrInterfaceType
4708[NodeList
4709[this
4710[NodeList
4711[ClassOrInterfaceType
4624->4625
4625->4626
4626->4627
4626->4628
4628->4629
4629->4630
4629->4631
4631->4632
4632->4633
4632->4634
4629->4635
4635->4636
4636->4637
4637->4638
4638->4639
4639->4640
4639->4641
4638->4642
4636->4643
4643->4644
4644->4645
4645->4646
4645->4647
4644->4648
4644->4649
4649->4650
4650->4651
4636->4652
4652->4653
4653->4654
4654->4655
4654->4656
4653->4657
4653->4658
4658->4659
4659->4660
4636->4661
4661->4662
4662->4663
4662->4664
4662->4665
4665->4666
4666->4667
4636->4668
4668->4669
4669->4670
4669->4671
4669->4672
4669->4673
4673->4674
4673->4675
4669->4676
4676->4677
4677->4678
4676->4679
4676->4680
4680->4681
4681->4682
4682->4683
4682->4684
4669->4685
4628->4686
4686->4687
4686->4688
4688->4689
4689->4690
4689->4691
4686->4692
4692->4693
4693->4694
4694->4695
4695->4696
4628->4697
4697->4698
4698->4699
4699->4700
4697->4701
4697->4702
4697->4703
4703->4704
4704->4705
4705->4706
4706->4707
4706->4708
4708->4709
4626->4710
4710->4711
