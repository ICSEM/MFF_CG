AST
0[CompilationUnit
1[NodeList
2[ClassOrInterfaceDeclaration
3[(?)DragonAppeasement
4[NodeList
5[ConstructorDeclaration
6[(?)DragonAppeasement
7[NodeList
8[Parameter
9[VariableDeclaratorId
10[ClassOrInterfaceType
11[BlockStmt
12[NodeList
13[ExpressionStmt
14[AssignExpr
15[FieldAccessExpr
16[(?)this
17[(?)expansionSetCode
18[(?)"ARB"
19[ExpressionStmt
20[MethodCallExpr
21[(?)this
22[(?)addAbility
23[NodeList
24[ObjectCreationExpr
25[ClassOrInterfaceType
26[NodeList
27[FieldAccessExpr
28[(?)Zone
29[(?)BATTLEFIELD
30[ObjectCreationExpr
31[ClassOrInterfaceType
32[ExpressionStmt
33[MethodCallExpr
34[(?)this
35[(?)addAbility
36[NodeList
37[ObjectCreationExpr
38[ClassOrInterfaceType
39[ExplicitConstructorInvocationStmt
40[NodeList
41[(?)ownerId
42[(?)115
43[(?)"Dragon Appeasement"
44[FieldAccessExpr
45[(?)Rarity
46[(?)UNCOMMON
47[ArrayCreationExpr
48[NodeList
49[ArrayCreationLevel
50[ClassOrInterfaceType
51[ArrayInitializerExpr
52[NodeList
53[FieldAccessExpr
54[(?)CardType
55[(?)ENCHANTMENT
56[(?)"{3}{B}{R}{G}"
57[ConstructorDeclaration
58[(?)DragonAppeasement
59[NodeList
60[Parameter
61[VariableDeclaratorId
62[ClassOrInterfaceType
63[BlockStmt
64[NodeList
65[ExplicitConstructorInvocationStmt
66[NodeList
67[(?)card
68[@Overridepublic DragonAppeasement copy() { return new DragonAppeasement(this);}
69[NodeList
70[MarkerAnnotationExpr
71[(?)Override
72[ClassOrInterfaceType
73[(?)copy
74[BlockStmt
75[NodeList
76[ReturnStmt
77[ObjectCreationExpr
78[ClassOrInterfaceType
79[NodeList
80[(?)this
81[NodeList
82[ClassOrInterfaceType
83[ClassOrInterfaceDeclaration
84[(?)DragonAppeasementTriggeredAbility
85[NodeList
86[ConstructorDeclaration
87[(?)DragonAppeasementTriggeredAbility
88[BlockStmt
89[NodeList
90[ExpressionStmt
91[MethodCallExpr
92[(?)setLeavesTheBattlefieldTrigger
93[NodeList
94[(?)true
95[ExplicitConstructorInvocationStmt
96[NodeList
97[FieldAccessExpr
98[(?)Zone
99[(?)BATTLEFIELD
100[ObjectCreationExpr
101[ClassOrInterfaceType
102[NodeList
103[(?)1
104[(?)true
105[ConstructorDeclaration
106[(?)DragonAppeasementTriggeredAbility
107[NodeList
108[Parameter
109[VariableDeclaratorId
110[ClassOrInterfaceType
111[BlockStmt
112[NodeList
113[ExplicitConstructorInvocationStmt
114[NodeList
115[(?)ability
116[@Overridepublic DragonAppeasementTriggeredAbility copy() { return new DragonAppeasementTriggeredAbility(this);}
117[NodeList
118[MarkerAnnotationExpr
119[(?)Override
120[ClassOrInterfaceType
121[(?)copy
122[BlockStmt
123[NodeList
124[ReturnStmt
125[ObjectCreationExpr
126[ClassOrInterfaceType
127[NodeList
128[(?)this
129[@Overridepublic boolean checkEventType(GameEvent event, Game game) { return event.getType() == EventType.SACRIFICED_PERMANENT;}
130[NodeList
131[MarkerAnnotationExpr
132[(?)Override
133[PrimitiveType
134[(?)checkEventType
135[NodeList
136[Parameter
137[VariableDeclaratorId
138[ClassOrInterfaceType
139[Parameter
140[VariableDeclaratorId
141[ClassOrInterfaceType
142[BlockStmt
143[NodeList
144[ReturnStmt
145[BinaryExpr
146[MethodCallExpr
147[(?)event
148[(?)getType
149[FieldAccessExpr
150[(?)EventType
151[(?)SACRIFICED_PERMANENT
152[@Overridepublic boolean checkTrigger(GameEvent event, Game game) { return event.getPlayerId().equals(this.getControllerId()) && game.getLastKnownInformation(event.getTargetId(), Zone.BATTLEFIELD).getCardType().contains(CardType.CREATURE);}
153[NodeList
154[MarkerAnnotationExpr
155[(?)Override
156[PrimitiveType
157[(?)checkTrigger
158[NodeList
159[Parameter
160[VariableDeclaratorId
161[ClassOrInterfaceType
162[Parameter
163[VariableDeclaratorId
164[ClassOrInterfaceType
165[BlockStmt
166[NodeList
167[ReturnStmt
168[BinaryExpr
169[MethodCallExpr
170[MethodCallExpr
171[(?)event
172[(?)getPlayerId
173[(?)equals
174[NodeList
175[MethodCallExpr
176[(?)this
177[(?)getControllerId
178[MethodCallExpr
179[MethodCallExpr
180[MethodCallExpr
181[(?)game
182[(?)getLastKnownInformation
183[NodeList
184[MethodCallExpr
185[(?)event
186[(?)getTargetId
187[FieldAccessExpr
188[(?)Zone
189[(?)BATTLEFIELD
190[(?)getCardType
191[(?)contains
192[NodeList
193[FieldAccessExpr
194[(?)CardType
195[(?)CREATURE
196[@Overridepublic String getRule() { return "Whenever you sacrifice a creature, " + super.getRule();}
197[NodeList
198[MarkerAnnotationExpr
199[(?)Override
200[ClassOrInterfaceType
201[(?)getRule
202[BlockStmt
203[NodeList
204[ReturnStmt
205[BinaryExpr
206[(?)"Whenever you sacrifice a creature, "
207[MethodCallExpr
208[(?)super
209[(?)getRule
210[NodeList
211[ClassOrInterfaceType
4811->4812
4812->4813
4813->4814
4813->4815
4815->4816
4816->4817
4816->4818
4818->4819
4819->4820
4819->4821
4816->4822
4822->4823
4823->4824
4824->4825
4825->4826
4826->4827
4826->4828
4825->4829
4823->4830
4830->4831
4831->4832
4831->4833
4831->4834
4834->4835
4835->4836
4835->4837
4837->4838
4838->4839
4838->4840
4837->4841
4841->4842
4823->4843
4843->4844
4844->4845
4844->4846
4844->4847
4847->4848
4848->4849
4823->4850
4850->4851
4851->4852
4851->4853
4851->4854
4851->4855
4855->4856
4855->4857
4851->4858
4858->4859
4859->4860
4858->4861
4858->4862
4862->4863
4863->4864
4864->4865
4864->4866
4851->4867
4815->4868
4868->4869
4868->4870
4870->4871
4871->4872
4871->4873
4868->4874
4874->4875
4875->4876
4876->4877
4877->4878
4815->4879
4879->4880
4880->4881
4881->4882
4879->4883
4879->4884
4879->4885
4885->4886
4886->4887
4887->4888
4888->4889
4888->4890
4890->4891
4813->4892
4892->4893
4812->4894
4894->4895
4894->4896
4896->4897
4897->4898
4897->4899
4899->4900
4900->4901
4901->4902
4902->4903
4902->4904
4904->4905
4900->4906
4906->4907
4907->4908
4908->4909
4908->4910
4907->4911
4911->4912
4911->4913
4913->4914
4907->4915
4896->4916
4916->4917
4916->4918
4918->4919
4919->4920
4919->4921
4916->4922
4922->4923
4923->4924
4924->4925
4925->4926
4896->4927
4927->4928
4928->4929
4929->4930
4927->4931
4927->4932
4927->4933
4933->4934
4934->4935
4935->4936
4936->4937
4936->4938
4938->4939
4896->4940
4940->4941
4941->4942
4942->4943
4940->4944
4940->4945
4940->4946
4946->4947
4947->4948
4947->4949
4946->4950
4950->4951
4950->4952
4940->4953
4953->4954
4954->4955
4955->4956
4956->4957
4957->4958
4957->4959
4956->4960
4960->4961
4960->4962
4896->4963
4963->4964
4964->4965
4965->4966
4963->4967
4963->4968
4963->4969
4969->4970
4970->4971
4970->4972
4969->4973
4973->4974
4973->4975
4963->4976
4976->4977
4977->4978
4978->4979
4979->4980
4980->4981
4981->4982
4981->4983
4980->4984
4980->4985
4985->4986
4986->4987
4986->4988
4979->4989
4989->4990
4990->4991
4991->4992
4991->4993
4991->4994
4994->4995
4995->4996
4995->4997
4994->4998
4998->4999
4998->5000
4990->5001
4989->5002
4989->5003
5003->5004
5004->5005
5004->5006
4896->5007
5007->5008
5008->5009
5009->5010
5007->5011
5007->5012
5007->5013
5013->5014
5014->5015
5015->5016
5016->5017
5016->5018
5018->5019
5018->5020
4894->5021
5021->5022
