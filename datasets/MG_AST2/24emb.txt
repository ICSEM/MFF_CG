AST
0[CompilationUnit
1[NodeList
2[ClassOrInterfaceDeclaration
3[(?)DemonspineWhip
4[NodeList
5[ConstructorDeclaration
6[(?)DemonspineWhip
7[NodeList
8[Parameter
9[VariableDeclaratorId
10[ClassOrInterfaceType
11[BlockStmt
12[NodeList
13[ExpressionStmt
14[AssignExpr
15[FieldAccessExpr
16[(?)this
17[(?)expansionSetCode
18[(?)"ARB"
19[ExpressionStmt
20[MethodCallExpr
21[FieldAccessExpr
22[(?)this
23[(?)subtype
24[(?)add
25[NodeList
26[(?)"Equipment"
27[ExpressionStmt
28[MethodCallExpr
29[(?)this
30[(?)addAbility
31[NodeList
32[ObjectCreationExpr
33[ClassOrInterfaceType
34[NodeList
35[FieldAccessExpr
36[(?)Zone
37[(?)BATTLEFIELD
38[ObjectCreationExpr
39[ClassOrInterfaceType
40[NodeList
41[ObjectCreationExpr
42[ClassOrInterfaceType
43[ObjectCreationExpr
44[ClassOrInterfaceType
45[NodeList
46[(?)0
47[FieldAccessExpr
48[(?)Duration
49[(?)EndOfTurn
50[ObjectCreationExpr
51[ClassOrInterfaceType
52[NodeList
53[(?)"{X}"
54[ExpressionStmt
55[MethodCallExpr
56[(?)this
57[(?)addAbility
58[NodeList
59[ObjectCreationExpr
60[ClassOrInterfaceType
61[NodeList
62[FieldAccessExpr
63[(?)Outcome
64[(?)AddAbility
65[ObjectCreationExpr
66[ClassOrInterfaceType
67[NodeList
68[(?)1
69[ExplicitConstructorInvocationStmt
70[NodeList
71[(?)ownerId
72[(?)39
73[(?)"Demonspine Whip"
74[FieldAccessExpr
75[(?)Rarity
76[(?)UNCOMMON
77[ArrayCreationExpr
78[NodeList
79[ArrayCreationLevel
80[ClassOrInterfaceType
81[ArrayInitializerExpr
82[NodeList
83[FieldAccessExpr
84[(?)CardType
85[(?)ARTIFACT
86[(?)"{B}{R}"
87[ConstructorDeclaration
88[(?)DemonspineWhip
89[NodeList
90[Parameter
91[VariableDeclaratorId
92[ClassOrInterfaceType
93[BlockStmt
94[NodeList
95[ExplicitConstructorInvocationStmt
96[NodeList
97[(?)card
98[@Overridepublic DemonspineWhip copy() { return new DemonspineWhip(this);}
99[NodeList
100[MarkerAnnotationExpr
101[(?)Override
102[ClassOrInterfaceType
103[(?)copy
104[BlockStmt
105[NodeList
106[ReturnStmt
107[ObjectCreationExpr
108[ClassOrInterfaceType
109[NodeList
110[(?)this
111[NodeList
112[ClassOrInterfaceType
113[ClassOrInterfaceDeclaration
114[(?)XPaid
115[NodeList
116[@Overridepublic int calculate(Game game, Ability sourceAbility, Effect effect) { int paid = sourceAbility.getManaCostsToPay().getX(); return paid;}
117[NodeList
118[MarkerAnnotationExpr
119[(?)Override
120[PrimitiveType
121[(?)calculate
122[NodeList
123[Parameter
124[VariableDeclaratorId
125[ClassOrInterfaceType
126[Parameter
127[VariableDeclaratorId
128[ClassOrInterfaceType
129[Parameter
130[VariableDeclaratorId
131[ClassOrInterfaceType
132[BlockStmt
133[NodeList
134[ExpressionStmt
135[VariableDeclarationExpr
136[PrimitiveType
137[NodeList
138[VariableDeclarator
139[VariableDeclaratorId
140[MethodCallExpr
141[MethodCallExpr
142[(?)sourceAbility
143[(?)getManaCostsToPay
144[(?)getX
145[ReturnStmt
146[(?)paid
147[@Overridepublic DynamicValue copy() { return this;}
148[NodeList
149[MarkerAnnotationExpr
150[(?)Override
151[ClassOrInterfaceType
152[(?)copy
153[BlockStmt
154[NodeList
155[ReturnStmt
156[(?)this
157[@Overridepublic String getMessage() { return "X paid";}
158[NodeList
159[MarkerAnnotationExpr
160[(?)Override
161[ClassOrInterfaceType
162[(?)getMessage
163[BlockStmt
164[NodeList
165[ReturnStmt
166[(?)"X paid"
167[@Overridepublic String toString() { return "X";}
168[NodeList
169[MarkerAnnotationExpr
170[(?)Override
171[ClassOrInterfaceType
172[(?)toString
173[BlockStmt
174[NodeList
175[ReturnStmt
176[(?)"X"
177[NodeList
178[ClassOrInterfaceType
4445->4446
4446->4447
4447->4448
4447->4449
4449->4450
4450->4451
4450->4452
4452->4453
4453->4454
4453->4455
4450->4456
4456->4457
4457->4458
4458->4459
4459->4460
4460->4461
4460->4462
4459->4463
4457->4464
4464->4465
4465->4466
4466->4467
4466->4468
4465->4469
4465->4470
4470->4471
4457->4472
4472->4473
4473->4474
4473->4475
4473->4476
4476->4477
4477->4478
4477->4479
4479->4480
4480->4481
4480->4482
4479->4483
4483->4484
4483->4485
4485->4486
4486->4487
4485->4488
4488->4489
4488->4490
4490->4491
4485->4492
4492->4493
4492->4494
4479->4495
4495->4496
4495->4497
4497->4498
4457->4499
4499->4500
4500->4501
4500->4502
4500->4503
4503->4504
4504->4505
4504->4506
4506->4507
4507->4508
4507->4509
4506->4510
4510->4511
4510->4512
4512->4513
4457->4514
4514->4515
4515->4516
4515->4517
4515->4518
4515->4519
4519->4520
4519->4521
4515->4522
4522->4523
4523->4524
4522->4525
4522->4526
4526->4527
4527->4528
4528->4529
4528->4530
4515->4531
4449->4532
4532->4533
4532->4534
4534->4535
4535->4536
4535->4537
4532->4538
4538->4539
4539->4540
4540->4541
4541->4542
4449->4543
4543->4544
4544->4545
4545->4546
4543->4547
4543->4548
4543->4549
4549->4550
4550->4551
4551->4552
4552->4553
4552->4554
4554->4555
4447->4556
4556->4557
4446->4558
4558->4559
4558->4560
4560->4561
4561->4562
4562->4563
4563->4564
4561->4565
4561->4566
4561->4567
4567->4568
4568->4569
4568->4570
4567->4571
4571->4572
4571->4573
4567->4574
4574->4575
4574->4576
4561->4577
4577->4578
4578->4579
4579->4580
4580->4581
4580->4582
4582->4583
4583->4584
4583->4585
4585->4586
4586->4587
4586->4588
4585->4589
4578->4590
4590->4591
4560->4592
4592->4593
4593->4594
4594->4595
4592->4596
4592->4597
4592->4598
4598->4599
4599->4600
4600->4601
4560->4602
4602->4603
4603->4604
4604->4605
4602->4606
4602->4607
4602->4608
4608->4609
4609->4610
4610->4611
4560->4612
4612->4613
4613->4614
4614->4615
4612->4616
4612->4617
4612->4618
4618->4619
4619->4620
4620->4621
4558->4622
4622->4623
